{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./repository.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_li_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const game_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", game_r2.title, \" \");\n  }\n}\nexport class AppComponent {\n  constructor(repositoryService) {\n    this.repositoryService = repositoryService;\n    this.title = 'BoardGameWebApp';\n    this.gameTitle = \"\";\n    this.description = \"\";\n    this.yearPublished = -1;\n    this.playerCount = -1;\n  }\n  ngOnInit() {\n    this.gettGames();\n  }\n  addBoardGame(form) {\n    let newGame = {\n      id: -1,\n      title: form.form.value.title,\n      description: form.form.value.description,\n      yearPublished: form.form.value.yearPublished,\n      recommendedPlayerCount: form.form.value.playerCount\n    };\n    this.repositoryService.addBoardGames(newGame).subscribe(() => {\n      this.gettGames();\n    });\n  }\n  gettGames() {\n    this.repositoryService.getBoardGames().subscribe(response => {\n      this.boardGames = response;\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.RepositoryService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 24,\n  vars: 1,\n  consts: [[3, \"ngSubmit\"], [\"newGameForm\", \"ngForm\"], [\"for\", \"title\"], [\"name\", \"title\", \"id\", \"title\", \"ngModel\", \"\"], [\"for\", \"description\"], [\"name\", \"description\", \"id\", \"description\", \"ngModel\", \"\"], [\"for\", \"yearPublished\"], [\"name\", \"yearPublished\", \"id\", \"yearPublished\", \"ngModel\", \"\"], [\"for\", \"playerCount\"], [\"name\", \"playerCount\", \"id\", \"playerCount\", \"ngModel\", \"\"], [4, \"ngFor\", \"ngForOf\"], [2, \"font-size\", \"20px\", \"text-align\", \"center\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_1_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.addBoardGame(_r0));\n      });\n      i0.ɵɵelementStart(3, \"p\")(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Game Title:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\")(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p\")(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Year Published:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"p\")(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Recommended Player Count:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"p\")(20, \"button\");\n      i0.ɵɵtext(21, \"Add New Game\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(22, \"div\");\n      i0.ɵɵtemplate(23, AppComponent_li_23_Template, 3, 1, \"li\", 10);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"ngForOf\", ctx.boardGames);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAWEA,0BAAoC;IACsBA,YAAgB;IAAAA,iBAAO;;;;IAAvBA,eAAgB;IAAhBA,6CAAgB;;;ACF5E,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IAHrC,UAAK,GAAG,iBAAiB;IAKzB,cAAS,GAAW,EAAE;IACtB,gBAAW,GAAW,EAAE;IACxB,kBAAa,GAAW,CAAC,CAAC;IAC1B,gBAAW,GAAU,CAAC,CAAC;EALqC;EAQ5DC,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAC,YAAY,CAACC,IAAY;IACvB,IAAIC,OAAO,GAAe;MACxBC,EAAE,EAAE,CAAC,CAAC;MACNC,KAAK,EAAEH,IAAI,CAACA,IAAI,CAACI,KAAK,CAACD,KAAK;MAC5BE,WAAW,EAAEL,IAAI,CAACA,IAAI,CAACI,KAAK,CAACC,WAAW;MACxCC,aAAa,EAAEN,IAAI,CAACA,IAAI,CAACI,KAAK,CAACE,aAAa;MAC5CC,sBAAsB,EAAEP,IAAI,CAACA,IAAI,CAACI,KAAK,CAACI;KACzC;IAGD,IAAI,CAACZ,iBAAiB,CAACa,aAAa,CAACR,OAAO,CAAC,CAACS,SAAS,CACrD,MAAK;MACH,IAAI,CAACZ,SAAS,EAAE;IAClB,CAAC,CACF;EACH;EAGAA,SAAS;IACP,IAAI,CAACF,iBAAiB,CAACe,aAAa,EAAE,CAACD,SAAS,CAC7CE,QAAQ,IAAI;MAAG,IAAI,CAACC,UAAU,GAAGD,QAAQ;IAAE,CAAC,CAAC;EAClD;;AArCWlB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDVzBzB,2BAAK;MACyBA;QAAAA;QAAA;QAAA,OAAYA,oCAAyB;MAAA,EAAC;MAChEA,yBAAG;MAAmBA,2BAAW;MAAAA,iBAAQ;MAACA,2BAAyC;MAACA,iBAAI;MACxFA,yBAAG;MAA0BA,4BAAY;MAAAA,iBAAQ;MAACA,4BAAqD;MAAAA,iBAAI;MAC3GA,0BAAG;MAA4BA,gCAAe;MAAAA,iBAAQ;MAACA,4BAAyD;MAAAA,iBAAI;MACpHA,0BAAG;MAA0BA,0CAAyB;MAAAA,iBAAQ;MAACA,4BAAqD;MAAAA,iBAAI;MACxHA,0BAAG;MAAQA,6BAAY;MAAAA,iBAAS;MAIpCA,4BAAK;MACHA,8DAEK;MACPA,iBAAM;;;MAHiBA,gBAAa;MAAbA,wCAAa","names":["i0","AppComponent","constructor","repositoryService","ngOnInit","gettGames","addBoardGame","form","newGame","id","title","value","description","yearPublished","recommendedPlayerCount","playerCount","addBoardGames","subscribe","getBoardGames","response","boardGames","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\bootcampRepos\\BoardGameWebApp\\src\\app\\app.component.html","C:\\bootcampRepos\\BoardGameWebApp\\src\\app\\app.component.ts"],"sourcesContent":["<div>\n  <form #newGameForm=\"ngForm\" (ngSubmit)=\"addBoardGame(newGameForm)\">\n    <p><label for=\"title\">Game Title:</label> <input name=\"title\" id=\"title\" ngModel /> </p>\n    <p> <label for=\"description\">Description:</label> <input name=\"description\" id=\"description\" ngModel /></p>\n    <p> <label for=\"yearPublished\">Year Published:</label> <input name=\"yearPublished\" id=\"yearPublished\" ngModel /></p>\n    <p> <label for=\"playerCount\">Recommended Player Count:</label> <input name=\"playerCount\" id=\"playerCount\" ngModel /></p>\n    <p><button>Add New Game</button></p>\n  </form>\n</div>\n\n<div>\n  <li *ngFor=\"let game of boardGames\">        \n         <span  style=\"font-size: 20px;text-align: center;\">{{game.title}}  </span>      \n  </li>\n</div>","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { IBoardGame } from './interfaces/board-game';\nimport { RepositoryService } from './repository.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BoardGameWebApp';\n\n\n  constructor(private repositoryService: RepositoryService) { }\n  boardGames: any;\n  gameTitle: string = \"\";\n  description: string = \"\";\n  yearPublished: number = -1;\n  playerCount: number= -1\n\n\n  ngOnInit(): void {\n    this.gettGames();\n  }\n\n  addBoardGame(form: NgForm) {\n    let newGame: IBoardGame = {\n      id: -1,\n      title: form.form.value.title,\n      description: form.form.value.description,\n      yearPublished: form.form.value.yearPublished,\n      recommendedPlayerCount: form.form.value.playerCount\n    };\n\n\n    this.repositoryService.addBoardGames(newGame).subscribe(\n      () => {\n        this.gettGames();\n      }\n    );\n  };\n\n\n  gettGames() {\n    this.repositoryService.getBoardGames().subscribe(\n      (response) => { this.boardGames = response; });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}